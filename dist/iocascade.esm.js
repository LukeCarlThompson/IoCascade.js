function IoCascade(e){var t=this;void 0===e&&(e={});var r=e.selector;void 0===r&&(r="[data-io]");var o=e.classToAdd;void 0===o&&(o="io-in");var i=e.delay;void 0===i&&(i=100);var a=e.threshold;void 0===a&&(a=0);var s=e.rootMargin;void 0===s&&(s="0px 100px 0px 100px");var n=e.root;void 0===n&&(n=null),this.selector=r||"[data-io]",this.bareSelector=r?r.replace(/[\[\].]+/g,""):"data-io",this.classToAdd=o||"io-in",this.delay=i||100,this.threshold=a||0,this.rootMargin=s||"0px 100px 0px 100px",this.queue=[];r.replace(/[\[\].]+/g,"");if(!("IntersectionObserver"in window))return console.log("The javascript feature intersection Observer is not supported in your browser. We suggest upgrading to a more modern browser for a better experience."),void document.querySelectorAll(r).forEach(function(e){e.removeAttribute(t.bareSelector)});var u=!0,c=function(e){return"child"===e.getAttribute(t.bareSelector)},l=function(e){if(e.length>=1&&u){u=!1;var r=e.shift(),o=r.getAttribute("data-delay")||t.delay;setTimeout(function(){r.classList.add(t.classToAdd),u=!0,l(e)},o)}},d={root:n,threshold:this.threshold,rootMargin:this.rootMargin},h=new IntersectionObserver(function(e,r){for(var o=0;o<e.length;o++){var i=e[o],s=i.target;if(i.intersectionRatio>=a&&!c(s)){var n=s.querySelectorAll('[data-io="child"]');n.length?(t.queue.push(s),n.forEach(function(e){t.queue.push(e)}),l(t.queue)):i.isIntersecting&&(t.queue.push(s),l(t.queue)),r.unobserve(i.target)}}},d);Array.prototype.slice.call(document.querySelectorAll(r)).forEach(function(e){return h.observe(e)})}export default IoCascade;