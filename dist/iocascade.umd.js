!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define("iocascade",t):(e=e||self).iocascade=t()}(this,function(){"use strict";function e(e){e.style.transform="translate3d(0, 0, 0)",e.style.transitionDuration="0s",e.offsetHeight;var t=e.getBoundingClientRect();e.style.transitionDuration="",e.offsetHeight,e.style.transform="";var o=window.innerHeight||document.documentElement.clientHeight,n=t.top+.5*t.height,i=n>0&&n<o;return console.log("visible",i),i}return function(t){void 0===t&&(t={});var o=t.selector;void 0===o&&(o="[data-io]");var n=t.delay;void 0===n&&(n=100);var i=t.threshold;void 0===i&&(i=0);var r=t.rootMargin;void 0===r&&(r="0px 100px -100px 100px");var s=t.root;void 0===s&&(s=null);var l=t.once;if(void 0===l&&(l=!1),!("IntersectionObserver"in window))return console.log("observeThis.js says intersection Observer is not supported in your browser"),void document.querySelectorAll(o).forEach(function(e){e.removeAttribute("data-io")});var a=!0,c=[],d=function(e){if(e.length>=1&&a){console.log("queue length --\x3e",e.length),a=!1;var t=e.shift(),o=t.getAttribute("data-delay")||n;setTimeout(function(){t.classList.add("observed-in"),a=!0,d(e),console.log("timeout ran")},o)}},u=new IntersectionObserver(function(t,o){for(var n=0;n<t.length;n++){var i=t[n],r=i.target;console.log("intersection detected"),i.isIntersecting&&e(r)?(c.push(r),d(c),console.log("added --\x3e",r),console.log("entry.intersectionRatio",i.intersectionRatio)):e(r)||(console.log("removed",r),console.log("entry.intersectionRatio",i.intersectionRatio),i.target.classList.remove("observed-in"))}},{root:s,threshold:i,rootMargin:r});Array.prototype.slice.call(document.querySelectorAll(o)).forEach(function(e){return u.observe(e)})}});