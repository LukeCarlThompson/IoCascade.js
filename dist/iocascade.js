var iocascade=function(){"use strict";return function(e){void 0===e&&(e={});var t=e.selector;void 0===t&&(t="[data-observe]");var r=e.delay;void 0===r&&(r=100);var o=e.threshold;void 0===o&&(o=0);var i=e.rootMargin;void 0===i&&(i="0px 100px -100px 100px");var a=e.root;void 0===a&&(a=null);var n=e.once;if(void 0===n&&(n=!1),!("IntersectionObserver"in window))return console.log("observeThis.js says intersection Observer is not supported in your browser"),void document.querySelectorAll(t).forEach(function(e){e.removeAttribute("data-observe")});var s=!0,c=[],v=function(e){if(e.length>=1&&!0===s){s=!1,e[0].classList.add("observed-in");var t=e.filter(function(t){return t!==e[0]});c=t;var o=e[0].getAttribute("data-delay")||r;clearTimeout(i);var i=setTimeout(function(){s=!0,v(c)},o)}},u=function(e){return"child"===e.getAttribute("data-observe")},d=new IntersectionObserver(function(e,t){for(var r=0;r<e.length;r++){var o=e[r],i=o.target;if(o.isIntersecting&&!u(i)){var a=i.querySelectorAll('[data-observe="child"]');a.length?(c.push(i),a.forEach(function(e){c.push(e)}),console.log("added children --\x3e",a),console.log("Queue --\x3e",c),v(c)):(c.push(i),console.log("Queue --\x3e",c),v(c))}o.isIntersecting&&n&&t.unobserve(o.target),o.isIntersecting||(o.target.classList.remove("observed-in"),u(o.target)?(o.target.removeAttribute("data-observe"),o.target.offsetWidth,o.target.setAttribute("data-observe","child")):(o.target.removeAttribute("data-observe"),o.target.offsetWidth,o.target.setAttribute("data-observe","")))}},{root:a,threshold:o,rootMargin:i});Array.prototype.slice.call(document.querySelectorAll(t)).forEach(function(e){return d.observe(e)})}}();