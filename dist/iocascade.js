var iocascade=function(){"use strict";return function(e){void 0===e&&(e={});var r=e.selector;void 0===r&&(r="[data-io]");var t=e.delay;void 0===t&&(t=100);var o=e.threshold;void 0===o&&(o=0);var i=e.rootMargin;void 0===i&&(i="0px 100px -100px 100px");var n=e.root;if(void 0===n&&(n=null),!("IntersectionObserver"in window))return console.log("The javascript feature intersection Observer is not supported in your browser. We suggest upgrading to a more modern browser for a better experience."),void document.querySelectorAll(r).forEach(function(e){e.removeAttribute("data-io")});var a=!0,s=[],c=function(e){return"child"===e.getAttribute("data-io")},u=function(e){if(e.length>=1&&a){a=!1;var r=e.shift(),o=r.getAttribute("data-delay")||t;setTimeout(function(){r.classList.add("observed-in"),a=!0,u(e),console.log("timeout ran")},o)}},l=new IntersectionObserver(function(e,r){for(var t=0;t<e.length;t++){var i=e[t],n=i.target;if(i.intersectionRatio>=o&&!c(n)){var a=n.querySelectorAll('[data-io="child"]');a.length?(s.push(n),a.forEach(function(e){s.push(e)}),u(s)):i.isIntersecting&&(s.push(n),u(s)),r.unobserve(i.target)}}},{root:n,threshold:o,rootMargin:i});Array.prototype.slice.call(document.querySelectorAll(r)).forEach(function(e){return l.observe(e)})}}();