!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define("iocascade",t):(e=e||self).iocascade=t()}(this,function(){"use strict";return function(e){void 0===e&&(e={});var t=e.selector;void 0===t&&(t="[data-io]");var o=e.delay;void 0===o&&(o=100);var r=e.threshold;void 0===r&&(r=0);var i=e.rootMargin;void 0===i&&(i="0px 100px -100px 100px");var n=e.root;void 0===n&&(n=null);var s=e.once;if(void 0===s&&(s=!1),!("IntersectionObserver"in window))return console.log("observeThis.js says intersection Observer is not supported in your browser"),void document.querySelectorAll(t).forEach(function(e){e.removeAttribute("data-io")});var a=!0,c=[],d=function(e){return"child"===e.getAttribute("data-io")},u=function(e){if(e.length>=1&&a){a=!1;var t=e.shift(),r=t.getAttribute("data-delay")||o;setTimeout(function(){t.classList.add("observed-in"),a=!0,u(e),console.log("timeout ran")},r)}},l=new IntersectionObserver(function(e,t){for(var o=0;o<e.length;o++){var r=e[o],i=r.target;if(r.isIntersecting&&!d(i)){var n=i.querySelectorAll('[data-io="child"]');n.length?(c.push(i),n.forEach(function(e){c.push(e)}),u(c)):r.isIntersecting&&(c.push(i),u(c))}r.isIntersecting&&s&&t.unobserve(r.target)}},{root:n,threshold:r,rootMargin:i});Array.prototype.slice.call(document.querySelectorAll(t)).forEach(function(e){return l.observe(e)})}});