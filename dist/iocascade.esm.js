function isVisible(e){e.style.transform="translate3d(0, 0, 0)",e.style.transitionDuration="0s",e.offsetHeight;var o=e.getBoundingClientRect();e.style.transitionDuration="",e.offsetHeight,e.style.transform="";var t=window.innerHeight||document.documentElement.clientHeight,i=o.top+.5*o.height,n=i>0&&i<t;return console.log("visible",n),n}function ioCascade(e){void 0===e&&(e={});var o=e.selector;void 0===o&&(o="[data-io]");var t=e.delay;void 0===t&&(t=100);var i=e.threshold;void 0===i&&(i=0);var n=e.rootMargin;void 0===n&&(n="0px 100px -100px 100px");var r=e.root;void 0===r&&(r=null);var s=e.once;if(void 0===s&&(s=!1),!("IntersectionObserver"in window))return console.log("observeThis.js says intersection Observer is not supported in your browser"),void document.querySelectorAll(o).forEach(function(e){e.removeAttribute("data-io")});var l=!0,a=[],c=function(e){if(e.length>=1&&l){console.log("queue length --\x3e",e.length),l=!1;var o=e.shift(),i=o.getAttribute("data-delay")||t;setTimeout(function(){o.classList.add("observed-in"),l=!0,c(e),console.log("timeout ran")},i)}},d=new IntersectionObserver(function(e,o){for(var t=0;t<e.length;t++){var i=e[t],n=i.target;console.log("intersection detected"),i.isIntersecting&&isVisible(n)?(a.push(n),c(a),console.log("added --\x3e",n),console.log("entry.intersectionRatio",i.intersectionRatio)):isVisible(n)||(console.log("removed",n),console.log("entry.intersectionRatio",i.intersectionRatio),i.target.classList.remove("observed-in"))}},{root:r,threshold:i,rootMargin:n});Array.prototype.slice.call(document.querySelectorAll(o)).forEach(function(e){return d.observe(e)})}export default ioCascade;