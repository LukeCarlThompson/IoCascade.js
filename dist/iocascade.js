var iocascade=function(){"use strict";return function(e){void 0===e&&(e={});var t=e.selector;void 0===t&&(t="[data-io]");var r=e.delay;void 0===r&&(r=100);var o=e.threshold;void 0===o&&(o=0);var i=e.rootMargin;void 0===i&&(i="0px 100px -100px 100px");var n=e.root;void 0===n&&(n=null);var s=e.once;if(void 0===s&&(s=!1),!("IntersectionObserver"in window))return console.log("observeThis.js says intersection Observer is not supported in your browser"),void document.querySelectorAll(t).forEach(function(e){e.removeAttribute("data-io")});var a=!0,c=[],u=function(e){return"child"===e.getAttribute("data-io")},l=function(e){if(e.length>=1&&a){a=!1;var t=e.shift(),o=t.getAttribute("data-delay")||r;setTimeout(function(){t.classList.add("observed-in"),a=!0,l(e),console.log("timeout ran")},o)}},v=new IntersectionObserver(function(e,t){for(var r=0;r<e.length;r++){var o=e[r],i=o.target;if(o.isIntersecting&&!u(i)){var n=i.querySelectorAll('[data-io="child"]');n.length?(c.push(i),n.forEach(function(e){c.push(e)}),l(c)):o.isIntersecting&&(c.push(i),l(c))}o.isIntersecting&&s&&t.unobserve(o.target)}},{root:n,threshold:o,rootMargin:i});Array.prototype.slice.call(document.querySelectorAll(t)).forEach(function(e){return v.observe(e)})}}();